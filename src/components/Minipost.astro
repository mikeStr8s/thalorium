---
import {
    render,
    type InferEntrySchema,
    type RenderedContent,
} from "astro:content";

interface Props {
    post: {
        id: string;
        body?: string;
        collection: "legendarium";
        data: InferEntrySchema<"legendarium">;
        rendered?: RenderedContent;
        filePath?: string;
    }
    index: number
}
const { post, index } = Astro.props as Props;
const { Content } = await render(post);

const firstChild = index === 0;
const cssBorder = firstChild ? 0 : 'solid 1px #5e3a7b';
const cssMargin = firstChild ? 0 : '5px';
const cssPadding = firstChild ? 0 : '5px';

const imgRegex = /<img[^>]*>/i;
const match = post.rendered?.html.match(imgRegex);
const firstImage = match ? match[0] : null;
---

<article class="mini-post">
    <Fragment set:html={firstImage}/>
    <div class="content"><Content /></div>
</article>

<style lang="scss" define:vars={{ cssBorder, cssMargin, cssPadding }}>
    .mini-post {
        border-top: var(--cssBorder);
        margin-top: var(--cssMargin);
        padding-top: var(--cssPadding);
    }

    .content {
        max-height: 150px;
        overflow-y: hidden;
    }
</style>
